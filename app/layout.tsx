// app/layout.tsx
"use client";
import { Metadata } from "next";
import React, { useEffect, useState } from "react";
import { Providers } from "@/app/utilsFunctions/Providers/NextUIProvider";
import ReduxProvider from "@/app/utilsFunctions/Providers/ReduxProvider";
import "./globals.css";
import Topbar from "./componentsLibrary/LayOutComponents/Topbar";
import SideNav from "./componentsLibrary/LayOutComponents/SideNav";
import Footer from "./componentsLibrary/LayOutComponents/Footer";
import { Decode } from "@/app/utilsFunctions/lib/decode";
import useAuth from "@/app/utilsFunctions/keyCloak/useAuth";
import { useRouter } from "next/navigation";
import Loading from "./loading";
// export const metadata: Metadata = {
//   title: "Torus 9X App",
//   description: "Generated by create next app",
// };
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const navigate = useRouter();
  const [keyCloak, token] = useAuth();
  const [tenant, setTenant] = useState({
    tenet: "",
    role: [],
  });

  useEffect(() => {
    (async () => {
      if (token) {
        const res = await Decode(token);
        if (res) {
          setTenant({
            tenet: res.preferred_username,
            role: res.resource_access.demoClient.roles,
          });
        }
      }
    })();
  }, [token]);

  const handleLogout = () => {
    keyCloak.logout();
    navigate.push("./");
  };

  return (
    <html lang="en" className="light">
      <head>
        <title>Torus</title>
        <link rel="icon" href="/favicon.ico" />
      </head>
      <body>
        <Providers>
          <ReduxProvider>
            {token ? (
              <div className="flex flex-col w-full h-full">
                <div>
                  <Topbar handleLogout={handleLogout} tenant={tenant} />
                </div>
                <div className="flex w-full h-full">
                  <div>
                    <SideNav />
                  </div>
                  <div className="w-full">{children}</div>
                </div>
                <div>
                  <Footer />
                </div>
              </div>
            ) : (
              <div className="flex w-full h-full">
                <Loading />
              </div>
            )}
          </ReduxProvider>
        </Providers>
      </body>
    </html>
  );
}
